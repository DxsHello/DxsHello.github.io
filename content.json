{"meta":{"title":"柚子想睡觉","subtitle":"","description":"","author":"wyq","url":"http://example.com","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2022-03-11T08:31:07.987Z","updated":"2022-03-11T08:31:07.987Z","comments":false,"path":"/404.html","permalink":"http://example.com/404.html","excerpt":"","text":""},{"title":"书单","date":"2022-03-11T08:37:39.889Z","updated":"2022-03-11T08:37:39.889Z","comments":false,"path":"books/index.html","permalink":"http://example.com/books/index.html","excerpt":"","text":""},{"title":"关于","date":"2022-03-12T09:16:31.247Z","updated":"2022-03-12T09:16:31.241Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"一个平平无奇的上班族，热爱看电影、热爱生活，尽力在生活中提高自己。致力于网站建设与前端用户体验设计。喜欢新事物，关注前端动态，对新的技术有追求； 喜欢产品，喜欢设计，喜欢coding。 123456789101112131415161718192021222324&#123; name: &#x27;DxsHello&#x27; gender: &#x27;女&#x27;, profession: &#x27;不求代码改变世界，只想提升自己&#x27;, address: &#x27;北京市&#x27;, github: &#x27;https://github.com/DxsHello&#x27;, description: &#x27;致力于网站建设与前端用户体验设计&#x27;, skills: [ [&#x27;Html&#x27;, &#x27;Javascript&#x27;, &#x27;jQuery&#x27;, &#x27;CSS&#x27;, &#x27;ES6&#x27;, &#x27;Node&#x27;], [&#x27;Webpack&#x27;, &#x27;Gulp&#x27;], [&#x27;Less&#x27;,&#x27;Sass&#x27;], [&#x27;Git&#x27;], [&#x27;Vue&#x27;], [&#x27;Bootstrap&#x27;, &#x27;Data Table&#x27;], [&#x27;平面设计&#x27;] ], devTools: [ [&#x27;Sublime Text&#x27;, &#x27;Visual Studio Code&#x27;,], [&#x27;Chrome DevTools&#x27;, &#x27;Fiddler&#x27;], [&#x27;SourceTree&#x27;] ] &#125;"},{"title":"分类","date":"2022-03-11T08:37:47.947Z","updated":"2022-03-11T08:37:47.946Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2022-03-11T08:37:56.326Z","updated":"2022-03-11T08:37:56.326Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2022-03-11T08:38:04.211Z","updated":"2022-03-11T08:38:04.211Z","comments":false,"path":"repository/index.html","permalink":"http://example.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-03-11T08:38:14.720Z","updated":"2022-03-11T08:38:14.720Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Vue中的Cannot GET/xxx","slug":"Vue中的Cannot-GET-xxx","date":"2022-05-19T07:16:23.000Z","updated":"2022-05-19T07:49:55.861Z","comments":true,"path":"2022/05/19/Vue中的Cannot-GET-xxx/","link":"","permalink":"http://example.com/2022/05/19/Vue%E4%B8%AD%E7%9A%84Cannot-GET-xxx/","excerpt":"","text":"场景 Vue3 模式：单页面应用（SPA）模式 路由模式：history 问题一：刷新页面，出现Cannot GET / xxx 解决办法：设置historyApiFallback: true webpack.config.js 12345devServer: &#123; ... historyApiFallback: true ... &#125; 问题二：在问题一解决的基础上增加代理（proxy）配置，刷新页面，再次出现 Cannot GET / xxx问题，并且控制台还有404报错信息 基础配置 webpack.config.js 12345678910devServer: &#123; ... historyApiFallback: true, proxy: &#123; &#x27;/&#x27;: &#123; target: &#x27;http://localhost:3000&#x27;, &#125; &#125;, ...&#125; 问题 解决办法：bypass webpack.config.js 123456789101112131415devServer: &#123; ... historyApiFallback: true, proxy: &#123; &#x27;/&#x27;: &#123; target: &#x27;http://localhost:3000&#x27;, bypass: function (req, res, proxyOptions) &#123; if (req.headers.accept.indexOf(&#x27;html&#x27;) !== -1) &#123; return &#x27;index.html&#x27;; // SPA，只有一个html页面，所有都返回index.html页面 &#125; &#125;, &#125; &#125;, ...&#125;","categories":[],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://example.com/tags/Vue/"}]},{"title":"hexo搭建博客后图片无法显示的解决办法","slug":"hexo搭建博客后图片无法显示的解决办法","date":"2022-05-18T06:47:06.000Z","updated":"2022-05-18T07:10:47.840Z","comments":true,"path":"2022/05/18/hexo搭建博客后图片无法显示的解决办法/","link":"","permalink":"http://example.com/2022/05/18/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%90%8E%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","excerpt":"","text":"1. 要添加图片，先npm install一个hexo-asset-image的依赖1npm install https://github.com/CodeFalling/hexo-asset-image --save 2. 操作步骤 然后把_config.yml中的post_asset_folder设为true，这个配置的意思是每次new post一个博客，会增加一个和博客同名的文件夹。 比如我将post_asset_folder设为true之后hexo new post “first-page”之后新建了一篇文章，就会同时在hexo/source/_post文件夹下生成一个.md文件和一个同名文件夹，文件夹存放文章中的图片 把图片放到.md文件的同名文件夹”first-page”里，最后在.md文件中引用图片 1![图片描述](./包名/图片名.png) 保存文件的修改之后，在命令行输入hexo clean,接着输入hexo g –d。在浏览器输入域名后查看相关文章，显示图片成功！！！","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]},{"title":"vue3环境搭建及项目搭建","slug":"vue环境搭建及项目搭建","date":"2022-05-18T02:20:02.000Z","updated":"2022-05-18T06:25:19.765Z","comments":true,"path":"2022/05/18/vue环境搭建及项目搭建/","link":"","permalink":"http://example.com/2022/05/18/vue%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/","excerpt":"","text":"1. 安装node.js安装完毕之后，执行一下命令查看node版本： node -v 2. npmnpm是随同nodejs一起安装的包管理工具，能解决nodejs代码部署上的很多问题； 可以通过输入 npm -v 来测试是否安装成功 3. 创建vue项目 使用 npm 全局安装 vue-cli(最新) 1npm install -g @vue/cli 查看现在的版本 1vue -V 创建一个项目 1vue create 项目名称不能用中文 注意：不能用驼峰方式命名项目名称了，它会报错的，只能全小写 选择预设(默认/手动设置) 12345? Please pick a preset: (Use arrow keys) testPreset ([Vue 3] less, babel, router, vuex) Default ([Vue 3] babel, eslint) Default ([Vue 2] babel, eslint) ❯ Manually select features 移动上下键，选择最后一个Manually select features进行手动创建，按回车 选择需要安装的插件 12345678910? Check the features needed for your project: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection, and &lt;enter&gt; to proceed) ◉ Babel ◯ TypeScript ◯ Progressive Web App (PWA) Support ◉ Router ◉ Vuex ◉ CSS Pre-processors ◯ Linter / Formatter❯◯ Unit Testing ◯ E2E Testing 移动上下键，箭头指着时，按空格键选中所需要的，以上选择的是babel、router、vuex、css pre-processors这四个插件，按回车到下一步 选择vue版本 123? Choose a version of Vue.js that you want to start the project with (Use arrow keys)❯ 3.x 2.x 是否按照history的方式创建路由，选择yes，回车下一步 1? Use history mode for router? (Requires proper server setup for index fallback in production) (Y/n) y 选择css预编译工具，选择less，回车下一步 1234? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): Sass/SCSS (with dart-sass) ❯ Less Stylus 想把的配置文件放在一个独立的配置文件中？还是放到package.json中？选择第一个，回车下一步 123? Where do you prefer placing config for Babel, ESLint, etc.? (Use arrow keys)❯ In dedicated config files In package.json 是否保存预设并用到以后的项目中，选择yes，回车下一步 1? Save this as a preset for future projects? (y/N) yes 保存的预设名称是什么，设为testPreset，回车下一步 1? Save preset as: testPreset 选择安装工具，回车下一步直到安装完成。 1? Pick the package manager to use when installing dependencies: NPM 运行 12cd 项目名称npm run serve 最终全部结果 123456789? Please pick a preset: Manually select features? Check the features needed for your project: Babel, Router, Vuex, CSS Pre-processors? Choose a version of Vue.js that you want to start the project with 3.x? Use history mode for router? (Requires proper server setup for index fallback in production) Yes? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): Less? Where do you prefer placing config for Babel, ESLint, etc.? In dedicated config files? Save this as a preset for future projects? Yes? Save preset as: testPreset? Pick the package manager to use when installing dependencies: NPM 4. 结果运行地址，出现如下页面： 5. 特别注意事项在mac上安装会报错Error: EACCES: permission denied, access ‘/usr/local/lib/node_modules 原因：执行命令时没有获得管理员权限 解决办法：在命令行前面添加sudo获取管理员权限 例如原来的为：npm install -g vue-cli 应该改为：sudo npm install -g vue-cli","categories":[],"tags":[{"name":"vue","slug":"vue","permalink":"http://example.com/tags/vue/"}]},{"title":"Mac OS上搭建Hexo博客流程","slug":"Mac OS上搭建Hexo博客流程","date":"2022-03-11T06:04:22.546Z","updated":"2022-05-18T08:26:09.440Z","comments":true,"path":"2022/03/11/Mac OS上搭建Hexo博客流程/","link":"","permalink":"http://example.com/2022/03/11/Mac%20OS%E4%B8%8A%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E6%B5%81%E7%A8%8B/","excerpt":"","text":"Hexo介绍 https://hexo.io/zh-cn/ Hexo是高效的静态站点生成框架，它基于Node.js。通过Hexo，你可以直接使用Markdown语法来撰写博客。你无需关心网页源代码的具体细节，你只需要用心写好你的博客内容就行。 环境准备1. 安装git 为了把本地的网页文件上传到github上面去，需要用到工具–Git[下载地址：https://git-scm.com/downloads ] 安装完成后在命令提示符中输入git –version来查看一下版本验证是否安装成功 2. 安装node.js 首先根据自己电脑型号下载稳定版，下载地址 https://nodejs.org/en/ 安装选项全部默认即可，一路点击Next 安装完成后，打开命令提示符，输入node -V 和npm -V，如果出现版本号，那么安装成功。 3. 安装淘宝镜像12// 使用npm安装相关依赖包，速度很慢，建议安装淘宝镜像，后续命令使用cnpmnpm config set registry https://registry.npm.taobao.org 安装hexo前面安装好git和nodejs后，就可以安装hexo了，可以先创建一个文件夹Blog，用来存放自己的博客文件，然后cd到这个文件夹下，定位到该目录下后: 1. 安装Hexo1npm install -g hexo-cli 后续如果项目出现问题，或者想重新创建，只需要删除此文件夹，即可。 2. 查看Hexo是否安装成功1hexo -V 3. 升级更新hexo到最新版 1npm update hexo -g 初始化博客网站1. 初始化项目12// 必须进入到项目文件夹里面后，执行此命令hexo init 如果指定，便会在目前的资料夹建立一个名为新的文件夹；否则会在目前资料夹初始化。 2. 启动Hexo1hexo server(或者简写：hexo s) 3. 浏览器打开博客12// 正常情况下，如果4000端口本地没有被占用，是如下地址（port预设为4000，可在 _config.yml 设定）http://localhost:4000/ 注册GitHub账号并创建个人仓库打开https://github.com/，新建一个项目仓库New repository，输入自己的项目名字，后面一定要加.github.io后缀，README初始化也要勾上。 要创建一个和你用户名相同的仓库，后面加.http://github.io，只有这样，将来要部署到`GitHub page的时候，才会被识别，也就是http://xxxx.github.io，其中xxx就是你注册GitHub`的用户名。例如我的：https://dxshello.github.io/ 将hexo部署到GitHub这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开博客根目录下的_config.yml文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。 修改最后一行的配置： 1234deploy: type: git repo: https://github.com/DxsHello/DxsHello.github.io.git branch: master repository修改为你自己的github项目地址即可，就是部署时，告诉工具，将生成网页通过git方式上传到你对应的链接仓库中。 这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。 1npm install hexo-deployer-git --save 每次部署的步骤，可按以下三步来进行 123hexo clean # 清除了你之前生成的东西，也可以不加hexo generate # 生成静态文章，简写：hexo ghexo deploy # 部署文章，简写：hexo d 一些常用命令1234567hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）hexo deploy #将.deploy目录部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]}],"categories":[],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://example.com/tags/Vue/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"vue","slug":"vue","permalink":"http://example.com/tags/vue/"}]}