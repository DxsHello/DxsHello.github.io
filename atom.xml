<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>柚子想睡觉</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-08-17T01:40:23.662Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>wyq</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue3通过后台返回数据流，vue项目中导出excel</title>
    <link href="http://example.com/2022/08/17/vue3%E9%80%9A%E8%BF%87%E5%90%8E%E5%8F%B0%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE%E6%B5%81%EF%BC%8Cvue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%AF%BC%E5%87%BAexcel/"/>
    <id>http://example.com/2022/08/17/vue3%E9%80%9A%E8%BF%87%E5%90%8E%E5%8F%B0%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE%E6%B5%81%EF%BC%8Cvue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%AF%BC%E5%87%BAexcel/</id>
    <published>2022-08-17T01:29:01.000Z</published>
    <updated>2022-08-17T01:40:23.662Z</updated>
    
    <content type="html"><![CDATA[<p>项目中导出数据excel方法有很多种，以下主要讲通过后端返回excel文件，导出excel</p><p><strong>request.js文件</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="comment">// 超时时间</span></span><br><span class="line">    <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="comment">// 默认请求路径</span></span><br><span class="line">    <span class="attr">baseURL</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// post请求头</span></span><br><span class="line">service.<span class="property">defaults</span>.<span class="property">headers</span>.<span class="property">post</span>[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;application/x-www-form-urlencoded;charset=UTF-8&#x27;</span>;</span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 每次发送请求之前判断是否存在token，如果存在，则统一在http请求的header都加上token，不用每次请求都手动添加了</span></span><br><span class="line">        <span class="comment">// 即使本地存在token，也有可能token是过期的，所以在响应拦截器中要对返回状态进行判断</span></span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>)  &amp;&amp; config.<span class="property">headers</span>) &#123;</span><br><span class="line">            config.<span class="property">headers</span>.<span class="property">common</span>[<span class="string">&#x27;token&#x27;</span>] = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">        &#125;         </span><br><span class="line">        <span class="keyword">return</span> config;    </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>();</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">    <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (response.<span class="property">status</span> === <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> response.<span class="property">data</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title class_">Promise</span>.<span class="title function_">reject</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error.<span class="property">response</span>.<span class="property">status</span>) &#123;            </span><br><span class="line">            <span class="keyword">switch</span> (error.<span class="property">response</span>.<span class="property">status</span>) &#123;     </span><br><span class="line">                <span class="comment">// 操作失败</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">3000</span>:                    </span><br><span class="line">                    <span class="keyword">break</span>; </span><br><span class="line">                <span class="comment">// 参数错误</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">4000</span>:                    </span><br><span class="line">                    <span class="keyword">break</span>;  </span><br><span class="line">                <span class="comment">// 权限不足</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">4001</span>:                    </span><br><span class="line">                    <span class="keyword">break</span>;  </span><br><span class="line">                <span class="comment">// token过期   </span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">4002</span>:                    </span><br><span class="line">                    <span class="keyword">break</span>;  </span><br><span class="line">                <span class="comment">// token认证失败 </span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">4002</span>:                    </span><br><span class="line">                    <span class="keyword">break</span>;        </span><br><span class="line">                <span class="comment">// 没有找到资源                </span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">4004</span>:                                   </span><br><span class="line">                    <span class="keyword">break</span>;   </span><br><span class="line">                <span class="comment">// 服务器错误</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">5000</span>:                                   </span><br><span class="line">                    <span class="keyword">break</span>;              </span><br><span class="line">                <span class="comment">// 其他错误，直接抛出错误提示                </span></span><br><span class="line">                <span class="attr">default</span>:                             </span><br><span class="line">            &#125;            </span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error.<span class="property">response</span>);        </span><br><span class="line">        &#125;     </span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 封装请求方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">export</span> <span class="keyword">const</span> request =</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@name</span>: 封装axios get方法</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> url 请求连接</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> params 请求参数</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> callback 回调方法</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="title function_">get</span>(<span class="params">url, params, callback</span>) </span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">             axios</span><br><span class="line">                 .<span class="title function_">get</span>(url, &#123;</span><br><span class="line">                     <span class="attr">params</span>: params</span><br><span class="line">                 &#125;)</span><br><span class="line">                 .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                     callback ? <span class="title function_">resolve</span>(<span class="title function_">callback</span>(res.<span class="property">data</span>)) : <span class="title function_">resolve</span>(res.<span class="property">data</span>);</span><br><span class="line">                 &#125;)</span><br><span class="line">                 .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                     <span class="title function_">reject</span>(err);</span><br><span class="line">                 &#125;);</span><br><span class="line">         &#125;);</span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="title function_">post</span>(<span class="params">url, params, callback</span>) </span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">             axios</span><br><span class="line">                 .<span class="title function_">post</span>(url,params)</span><br><span class="line">                 .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                     callback ? <span class="title function_">resolve</span>(<span class="title function_">callback</span>(res.<span class="property">data</span>)) : <span class="title function_">resolve</span>(res.<span class="property">data</span>);</span><br><span class="line">                 &#125;)</span><br><span class="line">                 .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                     <span class="title function_">reject</span>(err);</span><br><span class="line">                 &#125;);</span><br><span class="line">         &#125;);</span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="title function_">put</span>(<span class="params">url,params,callback</span>) </span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">             axios</span><br><span class="line">                 .<span class="title function_">put</span>(url, params)</span><br><span class="line">                 .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                     callback ? <span class="title function_">resolve</span>(<span class="title function_">callback</span>(res.<span class="property">data</span>)) : <span class="title function_">resolve</span>(res.<span class="property">data</span>);</span><br><span class="line">                 &#125;, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                     <span class="title function_">reject</span>(err)</span><br><span class="line">                 &#125;)</span><br><span class="line">         &#125;)</span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="title function_">delete</span>(<span class="params">url,params,callback</span>) </span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">             axios</span><br><span class="line">                 .<span class="title function_">put</span>(url, params)</span><br><span class="line">                 .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                     callback ? <span class="title function_">resolve</span>(<span class="title function_">callback</span>(res.<span class="property">data</span>)) : <span class="title function_">resolve</span>(res.<span class="property">data</span>);</span><br><span class="line">                 &#125;, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                     <span class="title function_">reject</span>(err)</span><br><span class="line">                 &#125;)</span><br><span class="line">         &#125;)</span><br><span class="line">     &#125;,</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service;</span><br></pre></td></tr></table></figure><p><strong>文件api下的index.js文件(封装接口)</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getDownLoad</span>(<span class="params">params</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/api/Report/getMaterialTracking`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    params,</span><br><span class="line">    <span class="attr">responseType</span>: <span class="string">&#x27;blob&#x27;</span>, <span class="comment">// 表明返回服务器返回的数据类型，不加会导致乱码</span></span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-download&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>对应文件内操作方法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 下载按钮</span><br><span class="line">&lt;el-button type=&quot;info&quot; plain @click=&quot;handleDownload&quot;&gt;下载导入模版&lt;/el-button&gt;</span><br><span class="line"></span><br><span class="line">// 下载数据</span><br><span class="line">handleDownload() &#123;</span><br><span class="line">    getDownLoad(query).then((res) =&gt; &#123;</span><br><span class="line">        console.log(res);</span><br><span class="line">        const link = document.createElement(&quot;a&quot;);</span><br><span class="line">        link.style.display = &quot;none&quot;;</span><br><span class="line">        link.href = URL.createObjectURL(res);</span><br><span class="line">        link.setAttribute(&quot;download&quot;, &quot;表格名字.xlsx&quot;);</span><br><span class="line">        document.body.appendChild(link);</span><br><span class="line">        link.click();</span><br><span class="line">        document.body.removeChild(link);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;项目中导出数据excel方法有很多种，以下主要讲通过后端返回excel文件，导出excel&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;request.js文件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t</summary>
      
    
    
    
    
    <category term="vue3导出excel文件流" scheme="http://example.com/tags/vue3%E5%AF%BC%E5%87%BAexcel%E6%96%87%E4%BB%B6%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>git clone报错问题</title>
    <link href="http://example.com/2022/07/29/git-clone%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2022/07/29/git-clone%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/</id>
    <published>2022-07-29T02:28:24.000Z</published>
    <updated>2022-07-29T02:58:04.321Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>最近在克隆git开源项目时，执行git clone命令后发现如下报错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error: RPC failed; curl 28 LibreSSL SSL_read: error:02FFF03C:system library:func(4095):Operation timed out, errno 60 fatal: expected flush after ref listing</span><br></pre></td></tr></table></figure><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><ol><li><p>初始化git仓库（新的没有执行过git命令的文件夹，这一步必须要，已有.git目录的跳过）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li><li><p>执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config http.sslVerify &quot;false&quot;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h4&gt;&lt;p&gt;最近在克隆git开源项目时，执行git clone命令后发现如下报错：&lt;/p&gt;
&lt;figure class=&quot;highlight plain</summary>
      
    
    
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>vue组件相关资源</title>
    <link href="http://example.com/2022/07/29/vue%E7%BB%84%E4%BB%B6%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/"/>
    <id>http://example.com/2022/07/29/vue%E7%BB%84%E4%BB%B6%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90/</id>
    <published>2022-07-29T02:03:26.000Z</published>
    <updated>2022-07-29T02:29:14.681Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-拖拽式Vue组件代码生成编辑器"><a href="#1-拖拽式Vue组件代码生成编辑器" class="headerlink" title="1. 拖拽式Vue组件代码生成编辑器"></a>1. 拖拽式Vue组件代码生成编辑器</h4><h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a><strong>介绍</strong></h5><p>拖拽式Vue组件代码生成编辑器是一款Vue代码生成工具，英文全称：Vue-Component-Creater，简称VCC。也是一种LowCode解决方案。通过它可以快速完成Vue代码的结构搭建。</p><blockquote><p>体验地址：<a href="https://vcc.sahadev.tech/">https://vcc.sahadev.tech/</a> 源码地址：<a href="https://github.com/sahadev/vue-component-creater-ui">https://github.com/sahadev/vue-component-creater-ui</a></p><p>功能持续更新中…</p></blockquote><h4 id="2-表单设计器"><a href="#2-表单设计器" class="headerlink" title="2. 表单设计器"></a>2. 表单设计器</h4><ol><li><p><strong>未知姓名</strong></p><blockquote><p>地址：<a href="http://cdn.kcz66.com/k-form-design.html">http://cdn.kcz66.com/k-form-design.html</a></p></blockquote></li><li><p><strong>form-generator - 适配 Element Plus UI 框架的表单设计器</strong></p><p><strong>功能特点：</strong></p><ul><li>可私有部署，可内置在项目中，在线可视化表单生成器</li><li>一键生成 Vue 组件代码</li><li>可内置在项目里，用户可在你的工具后台使用此组件生成表单</li><li>有表单验证功能</li><li>官方文档清晰详实</li></ul><blockquote><p>Github：<a href="https://link.segmentfault.com/?enc=G0Yqaa93NHUcAXWArMnMxw==.kLn2eqvH2GcQB+PZFO57cg2g3FTxL9Y8v8iK/NCbHDz40kdiElfL9RsiSS3FLil3">https://github.com/JakHuang/form-generator</a></p></blockquote></li><li><p><strong>form-render - 阿里团队开源表单设计器，自家 Antd UI 框架友好</strong></p><p><strong>功能特点：</strong></p><ul><li>支持阿里旗下的 <a href="https://link.segmentfault.com/?enc=9IQh68XKCdpvwqQ60EixLg==.xyYx3bhlSulBt0daAEo/UMrYbZqNuBhbBUSSbYUA9Hk=">Ant Design</a> 和 <a href="https://link.segmentfault.com/?enc=zqxiPPHbqs7HsTDubS5zbQ==.02kR+T7mVSZkQSxoRwcP8DunZqAYhJNHkJCfbVCJvTc=">Alibaba Fusion Design</a></li><li>功能逻辑清晰，快速部署</li><li>阿里旗下 20 多个业务线正在使用</li><li>支持表格校验、自定义嵌套、样式，可拖拽生成表单</li></ul><blockquote><p>Github：<a href="https://link.segmentfault.com/?enc=ZgEX1rMNWsU/sWuW+XT/KA==.zySitXOycxg/ctGXZrj6MonivTb928Z8C7qFoDrM0aeU9lTmRlm2qsY8KJa00TAz">https://github.com/alibaba/x-render</a></p></blockquote></li><li><p><strong>form-create - 支持Vue3 及 ElementPlusUI、AntDesign、iview 框架</strong></p><p><strong>功能特点：</strong></p><ul><li>全面支持 Vue 3</li><li>支持市面上 3 种主流框架 ElementPlusUI、AntDesign、iview</li><li>支持使用 json 数据生成表单</li><li>支持生成任何组件，提升表单的灵活性，可以实现功能更复杂的表单</li><li>内置组件缓存功能，提升渲染速度</li><li>双向数据绑定，生成规则变化后，页面会实时更新</li></ul><blockquote><p>Github：<a href="https://link.segmentfault.com/?enc=NI1P+veSpy1ecUk3rPtveA==.22OWWoRzExGA0Ezkgxevo0P4tcUvtzuLe6K9QugLc+NBZL+gzW4wpKI6iOasEZUm">https://github.com/xaboy/form-create</a></p></blockquote></li><li><p><strong>卡拉云 - 低代码开发工具，表单设计器的超集，拖拽表单直接连接后端数据，即搭即用</strong></p><p><strong>功能特点：</strong></p><ul><li>新一代低代码开发平台，与前端框架 Vue、React等相比，卡拉云的优势在于不用首先搭建开发环境，直接注册即可开始使用。</li><li>开发者完全不用处理任何前端问题，只需简单拖拽，即可快速生成所需组件</li><li>可一键接入常见数据库及 API，根据引导简单几步打通前后端，数周的开发时间，缩短至 1 小时。</li></ul><blockquote><p>官网：<a href="https://link.segmentfault.com/?enc=mx4FUYLyOPasy2OvhvZX9g==.VAE4yUN/Ck/eKyuP/fJEvd/9RLBOLPAZmjVJMhQAjeQ=">https://kalacloud.com</a></p></blockquote></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-拖拽式Vue组件代码生成编辑器&quot;&gt;&lt;a href=&quot;#1-拖拽式Vue组件代码生成编辑器&quot; class=&quot;headerlink&quot; title=&quot;1. 拖拽式Vue组件代码生成编辑器&quot;&gt;&lt;/a&gt;1. 拖拽式Vue组件代码生成编辑器&lt;/h4&gt;&lt;h5 id=&quot;介绍&quot;</summary>
      
    
    
    
    
    <category term="拖拽式Vue组件、表单设计器" scheme="http://example.com/tags/%E6%8B%96%E6%8B%BD%E5%BC%8FVue%E7%BB%84%E4%BB%B6%E3%80%81%E8%A1%A8%E5%8D%95%E8%AE%BE%E8%AE%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>js实现文件导出、文件下载</title>
    <link href="http://example.com/2022/05/25/js%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E5%AF%BC%E5%87%BA%E3%80%81%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
    <id>http://example.com/2022/05/25/js%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E5%AF%BC%E5%87%BA%E3%80%81%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</id>
    <published>2022-05-25T07:36:29.000Z</published>
    <updated>2022-05-25T07:41:03.128Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p><strong>通过创建a标签，实现下载功能</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">downLoad</span>(<span class="params">content,fileName</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> aEle = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);  <span class="comment">// 创建a标签</span></span><br><span class="line">        <span class="comment">// blob = new Blob([content]); </span></span><br><span class="line">        aEle.<span class="property">download</span> = fileName;  <span class="comment">// 设置下载文件的文件名</span></span><br><span class="line">        <span class="comment">// aEle.href = URL.createObjectUrl(blob);</span></span><br><span class="line">        aEle.<span class="property">href</span> = content;  <span class="comment">// content为后台返回的下载地址</span></span><br><span class="line">        aEle.<span class="title function_">click</span>();  <span class="comment">// 设置点击事件</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable constant_">URL</span> =<span class="string">&#x27;XXXX&#x27;</span> <span class="comment">//下载地址</span></span><br><span class="line"><span class="title function_">downLoad</span>(<span class="variable constant_">URL</span> ,<span class="string">&#x27;test.xlxs&#x27;</span>)</span><br></pre></td></tr></table></figure><p>如果content非下载地址，而是下载的内容。实现代码微调即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">downLoad</span>(<span class="params">content,fileName</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> aEle = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);  <span class="comment">// 创建a标签</span></span><br><span class="line">        blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([content]); </span><br><span class="line">        aEle.<span class="property">download</span> = fileName;  <span class="comment">// 设置下载文件的文件名</span></span><br><span class="line">        aEle.<span class="property">href</span> = <span class="variable constant_">URL</span>.<span class="title function_">createObjectUrl</span>(blob);</span><br><span class="line">        aEle.<span class="title function_">click</span>();  <span class="comment">// 设置点击事件</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">downLoad</span>(<span class="string">&#x27;下载内容123123&#x27;</span>,<span class="string">&#x27;test.txt&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>通过H5的download方法</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">downFile</span>(<span class="params">content, filename</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> ele = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>);  <span class="comment">// 创建下载链接</span></span><br><span class="line">    ele.<span class="property">download</span> = filename;  <span class="comment">//设置下载的名称</span></span><br><span class="line">    ele.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;  <span class="comment">// 隐藏的可下载链接</span></span><br><span class="line">    <span class="comment">// 字符内容转变成blob地址</span></span><br><span class="line">    <span class="keyword">var</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([content]);</span><br><span class="line">    ele.<span class="property">href</span> = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span><br><span class="line">    <span class="comment">// 绑定点击时间</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(ele);</span><br><span class="line">    ele.<span class="title function_">click</span>();</span><br><span class="line">    <span class="comment">// 然后移除</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(ele);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;通过创建a标签，实现下载功能&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1</summary>
      
    
    
    
    
    <category term="文件导出、下载" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6%E5%AF%BC%E5%87%BA%E3%80%81%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>网站及资源</title>
    <link href="http://example.com/2022/05/25/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%B5%84%E6%BA%90/"/>
    <id>http://example.com/2022/05/25/%E7%BD%91%E7%AB%99%E5%8F%8A%E8%B5%84%E6%BA%90/</id>
    <published>2022-05-25T06:01:32.000Z</published>
    <updated>2022-05-26T02:40:24.393Z</updated>
    
    <content type="html"><![CDATA[<p><strong><a href="https://github.com/DxsHello">自己的github地址</a></strong></p><p><strong>框架：</strong></p><p><a href="https://v3.cn.vuejs.org/">VUE</a>（渐进式JavaScript框架）</p><p><a href="https://www.nuxtjs.cn/">NUXT.JS</a>（Vue.js通用应用框架）</p><p><a href="https://element.eleme.cn/#/zh-CN">Element</a>（基于Vue 2.0）、<a href="https://element-plus.org/zh-CN/#/zh-CN">Element Plus</a>（基于Vue3）</p><p><a href="http://datav.jiaminghi.com/">DataV</a>（vue大屏数据展示组件库）</p><p><a href="https://vitejs.cn/guide/">Vite</a>（一种新型前端构建工具）</p><p><a href="https://v5.bootcss.com/">Bootstrap</a></p><p><a href="https://select2.org/">Select2</a>（是JQuery-based替换选择框，它支持搜索、远程数据集和结果分页。）</p><p><a href="https://adminlte.io/">AdminLTE</a>（最佳开源管理仪表板和控制面板主题。AdminLTE建立在Bootstrap之上，提供了一系列响应迅速、可重用和常用的组件。）</p><p><a href="https://www.zeptojs.com.cn/">Zepto.js</a>（API 中文版）</p><p><a href="http://ruoyi.vip/">若依管理系统</a>（基于SpringBoot、Shiro、Mybatis的权限后台管理系统）</p><p><a href="https://www.tailwindcss.cn/">tailwindcss</a>（通用的类CSS框架）</p><p><strong>开源网站：</strong></p><p><a href="https://www.wangeditor.com/">wangEditor</a>（开源Web富文本编辑器）</p><p><a href="https://echarts.apache.org/zh/">Apache ECharts（</a>一个基于JavaScript的开源可视化图表库）</p><p><a href="https://door.casdoor.com/">Casdoor</a>（一个增删改查的网页）</p><p><a href="https://cdn.baomitu.com/">静态资源托管库</a>（前端静态资源库）</p><p><strong>插件：</strong></p><p><a href="http://datatables.club/">Datatables</a>（一款jquery表格插件。是一个高度灵活的工具，可以将任何HTML表格添加高级的交互功能。）</p><p><a href="https://multiple-select.wenzhixin.net.cn/">Multiple Select</a>（多选。是一个JQuery插件，可以用复选框选择多个元素。）</p><p><a href="https://bootstrap-datepicker.readthedocs.io/en/latest/#">bootstrap-datepicker</a>（是一款Bootstrap日期选择器插件。该日期选择器插件支持多种语言,可通过配置参数设置日期选择器,日期范围选择器等,功能非常强大。）</p><p><a href="https://daterangepicker.com/">daterangepicker</a>（是Bootstrap的一个时间组件,使用很方便用于选择日期范围的JavaScript组件。 设计用于Bootstrap CSS框架。它最初是为了改善报表而创建的,它可以连接到任何网页元素,弹出两个日历,用于选择日期、时间或从预定义的范围,如“最后30天“。）</p><p><a href="https://www.jq22.com/">JQuery插件库</a></p><p><a href="https://tool.lu/timestamp/">时间戳转换工具</a></p><p><a href="https://www.gaituya.com/ps/">Photopea</a>（在线图像编辑器）</p><p><a href="http://www.jqueryfuns.com/resource/view/2288">html5时间轴插件</a></p><p><a href="http://www.bootstrapmb.com/item/2028">JQuery横向时间轴插件timeline</a></p><p><strong>资源 ：</strong></p><p><a href="http://hao.shejidaren.com/index.html"><strong>设计导航</strong></a>（分享优质设计网站及资源，提升设计师们的知识与阅历。分三大类：Web/UI、建筑/室内、设计书籍）</p><p><a href="https://cssdeck.com/">HTML5、CSS3、JS Demos各种特效</a></p><p><a href="http://www.bootstrapmb.com/tag/anniubiankuang">CSS3按钮边框特效</a></p><p><a href="https://www.processon.com/">免费在线流程图思维导图</a></p><p><a href="https://www.dute.org/ico-converter">ico图标制作</a></p><p><strong>工具：</strong></p><p><a href="https://unbug.github.io/codelf/">CODELT</a>（变量命名神器）</p><p><a href="https://tool.lu/">在线工具</a>（基于Web网页的各类小工具软件）</p><p><a href="https://bazhan.wang/">在线扒站工具</a>（一键将指定的网页的HTML、CSS、JS等前端资源打包下载）</p><p><a href="https://colorhunt.co/">Color Hunt</a>（调色板）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/DxsHello&quot;&gt;自己的github地址&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;框架：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://v3.cn.vuejs.or</summary>
      
    
    
    
    
    <category term="资源" scheme="http://example.com/tags/%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>Vue中的Cannot GET/xxx</title>
    <link href="http://example.com/2022/05/19/Vue%E4%B8%AD%E7%9A%84Cannot-GET-xxx/"/>
    <id>http://example.com/2022/05/19/Vue%E4%B8%AD%E7%9A%84Cannot-GET-xxx/</id>
    <published>2022-05-19T07:16:23.000Z</published>
    <updated>2022-05-19T07:49:55.861Z</updated>
    
    <content type="html"><![CDATA[<p><strong>场景</strong></p><ul><li>Vue3</li><li>模式：单页面应用（SPA）模式</li><li>路由模式：history</li></ul><p><strong>问题一：</strong>刷新页面，出现Cannot GET / xxx</p><p><img src="/2022/05/19/Vue%E4%B8%AD%E7%9A%84Cannot-GET-xxx/%E9%97%AE%E9%A2%98%E4%B8%80.png" alt="问题一"></p><p><strong>解决办法：</strong>设置<code>historyApiFallback: true</code></p><blockquote><p>webpack.config.js</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;  </span><br><span class="line">   ...  </span><br><span class="line">   historyApiFallback: true  </span><br><span class="line">   ... </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>问题二：</strong>在问题一解决的基础上增加代理（proxy）配置，刷新页面，再次出现 <code>Cannot GET / xxx</code>问题，并且控制台还有404报错信息</p><ul><li><p><strong>基础配置</strong></p><blockquote><p>webpack.config.js</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">  ...</span><br><span class="line">  historyApiFallback: true,</span><br><span class="line">  proxy: &#123;</span><br><span class="line">    &#x27;/&#x27;: &#123;</span><br><span class="line">      target: &#x27;http://localhost:3000&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>问题</strong><br><img src="/2022/05/19/Vue%E4%B8%AD%E7%9A%84Cannot-GET-xxx/%E9%97%AE%E9%A2%98%E4%BA%8C.png" alt="问题一"></p></li><li><p><strong>解决办法</strong>：<code>bypass</code></p><blockquote><p>webpack.config.js</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span><br><span class="line">  ...</span><br><span class="line">  historyApiFallback: true,</span><br><span class="line">  proxy: &#123;</span><br><span class="line">    &#x27;/&#x27;: &#123;</span><br><span class="line">      target: &#x27;http://localhost:3000&#x27;,</span><br><span class="line">      bypass: function (req, res, proxyOptions) &#123;</span><br><span class="line">        if (req.headers.accept.indexOf(&#x27;html&#x27;) !== -1) &#123;</span><br><span class="line">          return &#x27;index.html&#x27;; // SPA，只有一个html页面，所有都返回index.html页面</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;场景&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vue3&lt;/li&gt;
&lt;li&gt;模式：单页面应用（SPA）模式&lt;/li&gt;
&lt;li&gt;路由模式：history&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;问题一：&lt;/strong&gt;刷新页面，出现Cannot GET</summary>
      
    
    
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客后图片无法显示的解决办法</title>
    <link href="http://example.com/2022/05/18/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%90%8E%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://example.com/2022/05/18/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%90%8E%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2022-05-18T06:47:06.000Z</published>
    <updated>2022-05-18T07:10:47.840Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-要添加图片，先npm-install一个hexo-asset-image的依赖"><a href="#1-要添加图片，先npm-install一个hexo-asset-image的依赖" class="headerlink" title="1. 要添加图片，先npm install一个hexo-asset-image的依赖"></a>1. 要添加图片，先npm install一个hexo-asset-image的依赖</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><h4 id="2-操作步骤"><a href="#2-操作步骤" class="headerlink" title="2. 操作步骤"></a>2. 操作步骤</h4><ul><li><p>然后把_config.yml中的post_asset_folder设为true，这个配置的意思是每次new post一个博客，会增加一个和博客同名的文件夹。</p><p>比如我将post_asset_folder设为true之后hexo new post “first-page”之后新建了一篇文章，就会同时在hexo/source/_post文件夹下生成一个.md文件和一个同名文件夹，文件夹存放文章中的图片</p></li><li><p>把图片放到.md文件的同名文件夹”first-page”里，最后在.md文件中引用图片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片描述](./包名/图片名.png)</span><br></pre></td></tr></table></figure></li><li><p>保存文件的修改之后，在命令行输入hexo clean,接着输入hexo g –d。在浏览器输入域名后查看相关文章，显示图片成功！！！</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-要添加图片，先npm-install一个hexo-asset-image的依赖&quot;&gt;&lt;a href=&quot;#1-要添加图片，先npm-install一个hexo-asset-image的依赖&quot; class=&quot;headerlink&quot; title=&quot;1. 要添加图片，先</summary>
      
    
    
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>vue3环境搭建及项目搭建</title>
    <link href="http://example.com/2022/05/18/vue%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2022/05/18/vue%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/</id>
    <published>2022-05-18T02:20:02.000Z</published>
    <updated>2022-05-18T06:25:19.765Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1. 安装node.js"></a>1. 安装node.js</h4><p>安装完毕之后，执行一下命令查看node版本：</p><p>node -v</p><h4 id="2-npm"><a href="#2-npm" class="headerlink" title="2. npm"></a>2. npm</h4><p>npm是随同nodejs一起安装的包管理工具，能解决nodejs代码部署上的很多问题；</p><p>可以通过输入 npm -v 来测试是否安装成功</p><h4 id="3-创建vue项目"><a href="#3-创建vue项目" class="headerlink" title="3. 创建vue项目"></a>3. 创建vue项目</h4><ul><li><p>使用 npm 全局安装 vue-cli(最新)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure></li><li><p>查看现在的版本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue -V</span><br></pre></td></tr></table></figure></li><li><p>创建一个项目</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create 项目名称不能用中文</span><br></pre></td></tr></table></figure><p><strong>注意：不能用驼峰方式命名项目名称了，它会报错的，只能全小写</strong></p></li><li><p>选择预设(默认/手动设置)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">? <span class="title class_">Please</span> pick a <span class="attr">preset</span>: (<span class="title class_">Use</span> arrow keys)</span><br><span class="line">  testPreset ([<span class="title class_">Vue</span> <span class="number">3</span>] less, babel, router, vuex) </span><br><span class="line">  <span class="title class_">Default</span> ([<span class="title class_">Vue</span> <span class="number">3</span>] babel, eslint) </span><br><span class="line">  <span class="title class_">Default</span> ([<span class="title class_">Vue</span> <span class="number">2</span>] babel, eslint) </span><br><span class="line">❯ <span class="title class_">Manually</span> select features </span><br></pre></td></tr></table></figure><p>移动上下键，选择最后一个Manually select features进行手动创建，按回车</p></li><li><p>选择需要安装的插件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">? <span class="title class_">Check</span> the features needed <span class="keyword">for</span> your <span class="attr">project</span>: (<span class="title class_">Press</span> &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection, and &lt;enter&gt; to proceed)</span><br><span class="line"> ◉ <span class="title class_">Babel</span></span><br><span class="line"> ◯ <span class="title class_">TypeScript</span></span><br><span class="line"> ◯ <span class="title class_">Progressive</span> <span class="title class_">Web</span> <span class="title class_">App</span> (<span class="variable constant_">PWA</span>) <span class="title class_">Support</span></span><br><span class="line"> ◉ <span class="title class_">Router</span></span><br><span class="line"> ◉ <span class="title class_">Vuex</span></span><br><span class="line"> ◉ <span class="variable constant_">CSS</span> <span class="title class_">Pre</span>-processors</span><br><span class="line"> ◯ <span class="title class_">Linter</span> / <span class="title class_">Formatter</span></span><br><span class="line">❯◯ <span class="title class_">Unit</span> <span class="title class_">Testing</span></span><br><span class="line"> ◯ <span class="variable constant_">E2E</span> <span class="title class_">Testing</span></span><br></pre></td></tr></table></figure><p>移动上下键，箭头指着时，按空格键选中所需要的，以上选择的是babel、router、vuex、css pre-processors这四个插件，按回车到下一步   </p></li><li><p>选择vue版本</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">? <span class="title class_">Choose</span> a version <span class="keyword">of</span> <span class="title class_">Vue</span>.<span class="property">js</span> that you want to start the project <span class="keyword">with</span> (<span class="title class_">Use</span> arrow keys)</span><br><span class="line">❯ <span class="number">3.</span>x </span><br><span class="line">  <span class="number">2.</span>x </span><br></pre></td></tr></table></figure></li><li><p>是否按照history的方式创建路由，选择yes，回车下一步</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? <span class="title class_">Use</span> history mode <span class="keyword">for</span> router? (<span class="title class_">Requires</span> proper server setup <span class="keyword">for</span> index fallback <span class="keyword">in</span> production) (Y/n) y</span><br></pre></td></tr></table></figure></li><li><p>选择css预编译工具，选择less，回车下一步</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">? <span class="title class_">Pick</span> a <span class="variable constant_">CSS</span> pre-processor (<span class="title class_">PostCSS</span>, <span class="title class_">Autoprefixer</span> and <span class="variable constant_">CSS</span> <span class="title class_">Modules</span> are supported by <span class="keyword">default</span>): </span><br><span class="line">  <span class="title class_">Sass</span>/<span class="variable constant_">SCSS</span> (<span class="keyword">with</span> dart-sass) </span><br><span class="line">❯ <span class="title class_">Less</span> </span><br><span class="line">  <span class="title class_">Stylus</span> </span><br></pre></td></tr></table></figure></li><li><p>想把的配置文件放在一个独立的配置文件中？还是放到package.json中？选择第一个，回车下一步</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">? <span class="title class_">Where</span> <span class="keyword">do</span> you prefer placing config <span class="keyword">for</span> <span class="title class_">Babel</span>, <span class="title class_">ESLint</span>, etc.? (<span class="title class_">Use</span> arrow keys)</span><br><span class="line">❯ <span class="title class_">In</span> dedicated config files </span><br><span class="line">  <span class="title class_">In</span> package.<span class="property">json</span> </span><br></pre></td></tr></table></figure></li><li><p>是否保存预设并用到以后的项目中，选择yes，回车下一步</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? <span class="title class_">Save</span> <span class="variable language_">this</span> <span class="keyword">as</span> a preset <span class="keyword">for</span> future projects? (y/N) yes</span><br></pre></td></tr></table></figure></li><li><p>保存的预设名称是什么，设为testPreset，回车下一步</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? <span class="title class_">Save</span> preset <span class="attr">as</span>: testPreset</span><br></pre></td></tr></table></figure></li><li><p>选择安装工具，回车下一步直到安装完成。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? <span class="title class_">Pick</span> the package manager to use when installing <span class="attr">dependencies</span>: <span class="variable constant_">NPM</span></span><br></pre></td></tr></table></figure></li><li><p>运行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd 项目名称</span><br><span class="line">npm run serve</span><br></pre></td></tr></table></figure></li><li><p>最终全部结果</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">? <span class="title class_">Please</span> pick a <span class="attr">preset</span>: <span class="title class_">Manually</span> select features</span><br><span class="line">? <span class="title class_">Check</span> the features needed <span class="keyword">for</span> your <span class="attr">project</span>: <span class="title class_">Babel</span>, <span class="title class_">Router</span>, <span class="title class_">Vuex</span>, <span class="variable constant_">CSS</span> <span class="title class_">Pre</span>-processors</span><br><span class="line">? <span class="title class_">Choose</span> a version <span class="keyword">of</span> <span class="title class_">Vue</span>.<span class="property">js</span> that you want to start the project <span class="keyword">with</span> <span class="number">3.</span>x</span><br><span class="line">? <span class="title class_">Use</span> history mode <span class="keyword">for</span> router? (<span class="title class_">Requires</span> proper server setup <span class="keyword">for</span> index fallback <span class="keyword">in</span> production) <span class="title class_">Yes</span></span><br><span class="line">? <span class="title class_">Pick</span> a <span class="variable constant_">CSS</span> pre-processor (<span class="title class_">PostCSS</span>, <span class="title class_">Autoprefixer</span> and <span class="variable constant_">CSS</span> <span class="title class_">Modules</span> are supported by <span class="keyword">default</span>): <span class="title class_">Less</span></span><br><span class="line">? <span class="title class_">Where</span> <span class="keyword">do</span> you prefer placing config <span class="keyword">for</span> <span class="title class_">Babel</span>, <span class="title class_">ESLint</span>, etc.? <span class="title class_">In</span> dedicated config files</span><br><span class="line">? <span class="title class_">Save</span> <span class="variable language_">this</span> <span class="keyword">as</span> a preset <span class="keyword">for</span> future projects? <span class="title class_">Yes</span></span><br><span class="line">? <span class="title class_">Save</span> preset <span class="attr">as</span>: testPreset</span><br><span class="line">? <span class="title class_">Pick</span> the package manager to use when installing <span class="attr">dependencies</span>: <span class="variable constant_">NPM</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-结果"><a href="#4-结果" class="headerlink" title="4. 结果"></a>4. 结果</h4><p>运行地址，出现如下页面：</p><p><img src="/2022/05/18/vue%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/%E6%9C%80%E7%BB%88%E7%BB%93%E6%9E%9C.png" alt="最终结果"></p><h4 id="5-特别注意事项"><a href="#5-特别注意事项" class="headerlink" title="5. 特别注意事项"></a>5. 特别注意事项</h4><p><strong>在mac上安装会报错Error: EACCES: permission denied, access ‘/usr/local/lib/node_modules</strong></p><p>原因：执行命令时没有获得管理员权限</p><p>解决办法：在命令行前面添加sudo获取管理员权限</p><p>例如原来的为：npm install -g vue-cli</p><p>应该改为：sudo npm install -g vue-cli </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-安装node-js&quot;&gt;&lt;a href=&quot;#1-安装node-js&quot; class=&quot;headerlink&quot; title=&quot;1. 安装node.js&quot;&gt;&lt;/a&gt;1. 安装node.js&lt;/h4&gt;&lt;p&gt;安装完毕之后，执行一下命令查看node版本：&lt;/p&gt;
&lt;p&gt;no</summary>
      
    
    
    
    
    <category term="vue" scheme="http://example.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Mac OS上搭建Hexo博客流程</title>
    <link href="http://example.com/2022/03/11/Mac%20OS%E4%B8%8A%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E6%B5%81%E7%A8%8B/"/>
    <id>http://example.com/2022/03/11/Mac%20OS%E4%B8%8A%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2%E6%B5%81%E7%A8%8B/</id>
    <published>2022-03-11T06:04:22.546Z</published>
    <updated>2022-05-18T08:26:09.440Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo介绍"><a href="#Hexo介绍" class="headerlink" title="Hexo介绍"></a>Hexo介绍</h2><ul><li><a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></li><li>Hexo是高效的静态站点生成框架，它基于Node.js。通过Hexo，你可以直接使用Markdown语法来撰写博客。你无需关心网页源代码的具体细节，你只需要用心写好你的博客内容就行。</li></ul><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h4 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1. 安装git"></a>1. 安装git</h4><ul><li>为了把本地的网页文件上传到github上面去，需要用到工具–Git[下载地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a> ]</li><li>安装完成后在命令提示符中输入git –version来查看一下版本验证是否安装成功</li></ul><h4 id="2-安装node-js"><a href="#2-安装node-js" class="headerlink" title="2. 安装node.js"></a>2. 安装node.js</h4><ul><li>首先根据自己电脑型号下载稳定版，下载地址 <a href="https://nodejs.org/en/">https://nodejs.org/en/</a></li><li>安装选项全部默认即可，一路点击Next</li><li>安装完成后，打开命令提示符，输入node -V 和npm -V，如果出现版本号，那么安装成功。</li></ul><h4 id="3-安装淘宝镜像"><a href="#3-安装淘宝镜像" class="headerlink" title="3. 安装淘宝镜像"></a>3. 安装淘宝镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 使用npm安装相关依赖包，速度很慢，建议安装淘宝镜像，后续命令使用cnpm</span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>前面安装好git和nodejs后，就可以安装hexo了，可以先创建一个文件夹Blog，用来存放自己的博客文件，然后cd到这个文件夹下，定位到该目录下后:</p><h4 id="1-安装Hexo"><a href="#1-安装Hexo" class="headerlink" title="1. 安装Hexo"></a>1. 安装Hexo</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure><p>后续如果项目出现问题，或者想重新创建，只需要删除此文件夹，即可。</p><h4 id="2-查看Hexo是否安装成功"><a href="#2-查看Hexo是否安装成功" class="headerlink" title="2. 查看Hexo是否安装成功"></a>2. 查看Hexo是否安装成功</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -V</span><br></pre></td></tr></table></figure><h4 id="3-升级"><a href="#3-升级" class="headerlink" title="3. 升级"></a>3. 升级</h4><p>更新hexo到最新版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update hexo -g</span><br></pre></td></tr></table></figure><h2 id="初始化博客网站"><a href="#初始化博客网站" class="headerlink" title="初始化博客网站"></a>初始化博客网站</h2><h4 id="1-初始化项目"><a href="#1-初始化项目" class="headerlink" title="1. 初始化项目"></a>1. 初始化项目</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 必须进入到项目文件夹里面后，执行此命令</span><br><span class="line">hexo init </span><br></pre></td></tr></table></figure><p>如果指定，便会在目前的资料夹建立一个名为新的文件夹；否则会在目前资料夹初始化。</p><h4 id="2-启动Hexo"><a href="#2-启动Hexo" class="headerlink" title="2. 启动Hexo"></a>2. 启动Hexo</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server(或者简写：hexo s)</span><br></pre></td></tr></table></figure><h4 id="3-浏览器打开博客"><a href="#3-浏览器打开博客" class="headerlink" title="3. 浏览器打开博客"></a>3. 浏览器打开博客</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 正常情况下，如果4000端口本地没有被占用，是如下地址（port预设为4000，可在 _config.yml 设定）</span><br><span class="line">http://localhost:4000/</span><br></pre></td></tr></table></figure><h2 id="注册GitHub账号并创建个人仓库"><a href="#注册GitHub账号并创建个人仓库" class="headerlink" title="注册GitHub账号并创建个人仓库"></a>注册GitHub账号并创建个人仓库</h2><p>打开<a href="https://github.com/%EF%BC%8C%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%BB%93%E5%BA%93New">https://github.com/，新建一个项目仓库New</a> repository，输入自己的项目名字，<strong>后面一定要加<code>.github.io</code>后缀</strong>，<code>README</code>初始化也要勾上。</p><blockquote><p>要创建一个和你用户名相同的仓库，后面加.<a href="http://github.io,只有这样,将来要部署到`github/">http://github.io，只有这样，将来要部署到`GitHub</a> page<code>的时候，才会被识别，也就是http://xxxx.github.io，其中xxx就是你注册</code>GitHub`的用户名。例如我的：<a href="https://dxshello.github.io/">https://dxshello.github.io/</a></p></blockquote><h1 id="将hexo部署到GitHub"><a href="#将hexo部署到GitHub" class="headerlink" title="将hexo部署到GitHub"></a>将hexo部署到GitHub</h1><p>这一步，我们就可以将<code>hexo</code>和<code>GitHub</code>关联起来，也就是将<code>hexo</code>生成的文章部署到<code>GitHub</code>上，打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。</p><ol><li>修改最后一行的配置：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy</span>:</span><br><span class="line">  <span class="attr">type</span>: git</span><br><span class="line">  <span class="attr">repo</span>: <span class="attr">https</span>:<span class="comment">//github.com/DxsHello/DxsHello.github.io.git</span></span><br><span class="line">  <span class="attr">branch</span>: master</span><br></pre></td></tr></table></figure><p><code>repository</code>修改为你自己的<code>github</code>项目地址即可，就是部署时，告诉工具，将生成网页通过<code>git</code>方式上传到你对应的链接仓库中。</p><ol start="2"><li>这个时候需要先安装<code>deploy-git</code> ，也就是部署的命令,这样你才能用命令部署到<code>GitHub</code>。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ol start="3"><li>每次部署的步骤，可按以下三步来进行</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean # 清除了你之前生成的东西，也可以不加</span><br><span class="line">hexo generate # 生成静态文章，简写：hexo g</span><br><span class="line">hexo deploy # 部署文章，简写：hexo d</span><br></pre></td></tr></table></figure><h4 id="一些常用命令"><a href="#一些常用命令" class="headerlink" title="一些常用命令"></a>一些常用命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br><span class="line">hexo deploy #将.deploy目录部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hexo介绍&quot;&gt;&lt;a href=&quot;#Hexo介绍&quot; class=&quot;headerlink&quot; title=&quot;Hexo介绍&quot;&gt;&lt;/a&gt;Hexo介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hexo.io/zh-cn/&quot;&gt;https://hexo.io</summary>
      
    
    
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
</feed>
